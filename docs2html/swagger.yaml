swagger: "2.0"
info:
  description: "Documentation for Rides Rest API."
  version: 1.0.0
  title: Rides API
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "walter.gunasekaran@gmail.com"
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: /
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
paths:
  /rides:
    get:
      summary: Fetch Rides 
      description: Returns all rides
      parameters:
        - in: query 
          name: start_pos
          schema:
            type: integer
          description: Fetch Rides starting from given start_pos
        - in: query 
          name: max_limit
          schema:
            type: integer
          description: Limit the number of rides returned. Default 500
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
#              anyOf:
                $ref: "#/definitions/FetchRidesResponse"
#                $ref: "#/definitions/RidesNotFoundResponse"
#            type: array
#              items:
#                $ref: "#/definitions/FetchRidesResponse"
#            type: array
#            items:
#              oneOf:
#                $ref: "#/definitions/RidesNotFoundResponse"
    post:
      summary: Create a new Ride data
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Ride object that needs to be added
          required: true
          schema:
            $ref: "#/definitions/AddRideRequest"
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/FetchRidesResponse"
        "500":
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/rides/{id}":
    get:
      summary: Find Ride data by ID
      description: Returns a single ride information
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of Ride to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/FetchRidesResponse"
        "500":
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  AddRideRequest:
    required:
      - start_lat
      - start_long
      - end_lat
      - end_long
      - rider_name
      - driver_name
      - driver_vehicle
    properties:
      start_lat:
        type: number
      start_long:
        type: number
      end_lat:
        type: number
      end_long:
        type: number
      rider_name:
        type: string
      driver_name:
        type: string
      driver_vehicle:
        type: string
  FetchRidesResponse:
    required:
      - start_lat
      - start_long
      - end_lat
      - end_long
      - rider_name
      - driver_name
      - driver_vehicle
    properties:
      start_lat:
        type: number
      start_long:
        type: number
      end_lat:
        type: number
      end_long:
        type: number
      rider_name:
        type: string
      driver_name:
        type: string
      driver_vehicle:
        type: string
  ErrorResponse:
    required:
      - message
      - error_code
    properties:
      message:
        type: string
      error_code:
        type: string
